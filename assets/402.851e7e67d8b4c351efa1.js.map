{"version":3,"file":"402.851e7e67d8b4c351efa1.js","mappings":"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ACjBub,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEG/B,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBtb,gBAAiB,IACjBub,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACG5b,OAAQ,WAEL,OAAI0X,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCruBN,MAAMC,EACHre,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKie,OAAS,EACjB,CAEAC,SAAS/W,EAAMmK,GACZtR,KAAKie,OAAO3Z,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEA6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","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\nimport * as Sentry from \"@sentry/browser\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        console.log(`${jobID} : ${ev}:normalization begin`);\n                        let timeFrom = performance.now();\n                        model.normalizeData(data.data);\n                        let timeTo = performance.now();\n                        console.log(\n                           `${jobID} : ${ev}:normalization end:  ${\n                              timeTo - timeFrom\n                           }ms`\n                        );\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   // Wrap the call with senrty span for perfromance tracking\n   async salSend(params) {\n      const shortRoute =\n         params.url.match(/https?:\\/\\/[^/]+(\\/.+)/)?.[1] ?? params.url;\n      return Sentry.startSpan(\n         { name: shortRoute, op: \"websocket.client\" },\n         async () => await this._salSend(params)\n      );\n   }\n\n   _salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as Sentry from \"@sentry/browser\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.min.js\";\n// NOTE: moved to require() because using import with webix.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      // const scope = new Sentry.Scope();\n      // // Mark builder alerts as lower level in sentry\n      // if (domain == \"builder\") scope.setLevel(\"warning\");\n      // scope.setTag(\"domain\", domain);\n      // scope.setContext(\"info\", info);\n      // Sentry.captureException(error, scope);\n      // console.error(error);\n      // console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      const requestConfigs = this.object.request ?? {};\n      let url = requestConfigs.url;\n      let headers = this.object.headers;\n\n      // Paging\n      const pagingValues = this.object.getPagingValues({\n         skip: cond?.skip,\n         limit: cond?.limit,\n      });\n      if (Object.keys(pagingValues).length) {\n         switch (requestConfigs.paging.type) {\n            case \"queryString\":\n               url = `${url}?${new URLSearchParams(pagingValues).toString()}`;\n               break;\n            case \"header\":\n               headers = Object.assign(headers, pagingValues);\n               break;\n         }\n      }\n\n      // Load data\n      const response = await fetch(url, {\n         method: (requestConfigs.verb ?? \"GET\").toUpperCase(),\n         headers,\n         mode: \"cors\",\n         cache: \"no-cache\",\n      });\n\n      // Convert to JSON\n      let result = await response.json();\n\n      // Extract data from key\n      result = this.object.dataFromKey(result);\n\n      // TODO: filter data from FilterComplex by .cond variable\n\n      const returnData = {\n         data: result,\n         limit: cond?.limit,\n         // offset: 0,\n         pos: cond?.skip,\n         // total_count: 3\n      };\n\n      // Paging\n      if (pagingValues.total && result[pagingValues.total] != null) {\n         returnData.total_count = result[pagingValues.total];\n      }\n\n      return new Promise((resolve, reject) => {\n         const context = { resolve, reject };\n         const err = null;\n         this.handler_findAll(context, err, returnData);\n      });\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      if (this.object.isFetched && this.object.readonly === 1)\n         return await Promise.reject(new Error(\"This is the read only object\"));\n\n      await super.create(values);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n\n   dataFromKey(data) {\n      let result = data;\n\n      (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n         if (key == \"\" || key == null) return;\n         result = result?.[key];\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      // PREVENT: repeatly refresh data too often\n      if (this._getOptionsToggle) clearTimeout(this._getOptionsToggle);\n      await new Promise((resolve) => {\n         this._getOptionsToggle = setTimeout(resolve, 100);\n      });\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n   }\n\n   onShow() {\n      super.onShow();\n\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth();\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth() {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 18 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.dbTableName()}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","timeFrom","performance","now","normalizeData","timeTo","isConnected","shortRoute","match","op","_salSend","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","datacollectionFollow","loadData","waitForDataCollectionToInitialize","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","followCursor","unshift","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","opt","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","requestConfigs","pagingValues","URLSearchParams","fetch","verb","mode","cache","total","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsToggle","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}