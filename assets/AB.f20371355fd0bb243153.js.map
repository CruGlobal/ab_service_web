{"version":3,"file":"AB.f20371355fd0bb243153.js","mappings":"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oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBAC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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewOrgChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewOrgChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewOrgChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n\n      this.isLabelUpdateEnabled = false;\n      // {bool}\n      // we can only update labels on the server if this is enabled.\n      // Only on a Developers environment should we enable this:\n      // javascript console: > window.AB.Multilingual.enableLabelUpdates();\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   enableLabelUpdates() {\n      this.isLabelUpdateEnabled = true;\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (!this.isLabelUpdateEnabled) return;\n\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      console.warn(`socket: ${key} ${obj.label ?? obj.name}(${length})`, data);\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n\n         /**\n          * Get today's UTC time range in \"YYYY-MM-DD HH:MM:SS\" format.\n          *\n          * It converts the start and end of today to UTC to keep things consistent\n          * across time zones. Handy when you need to deal with dates in different regions.\n          *\n          * @returns {string} UTC time range for today.\n          */\n\n         getUTCDayTimeRange: () => {\n            let now = new Date();\n            let year = now.getFullYear();\n            let month = now.getMonth();\n            let date = now.getDate();\n            let startOfDay = new Date(year, month, date, 0, 0, 0);\n            let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n            // Convert to UTC by subtracting the timezone offset\n            let startOfDayUTC = new Date(\n               startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n            );\n            let endOfDayUTC = new Date(\n               endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n            );\n\n            //  Format the date in \"YYYY-MM-DD HH:MM:SS\" format\n            let formatDate = (date) => {\n               let isoString = date.toISOString();\n               return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n            };\n            return formatDate(startOfDayUTC).concat(\n               \"|\",\n               formatDate(endOfDayUTC)\n            );\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll,\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery,\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType,\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`,\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`,\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId,\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // If this DC uses a query, it pulls refreshed data from the server in the previous step,\n                        // so there is no need to recheck the query's filter.\n                        const skipDatasourceFilter =\n                           obj instanceof this.AB.Class.ABObjectQuery;\n\n                        // filter condition before add\n                        if (!this.isValidData(updatedV, skipDatasourceFilter))\n                           return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`],\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`],\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds,\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\",\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos,\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId,\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK,\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id,\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData,\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData,\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id),\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID),\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id,\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || [],\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id,\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || [],\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId,\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id,\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id,\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id,\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/,\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData,\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData,\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id),\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0],\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId,\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId,\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink.fieldLink.relationName();\n                     let valuesToAdd = {};\n                     let valuesIn = linkCursor[colName] || [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\", DC);\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         // let pos = this.__dataCollection.count();\n         let pos = this.__dataCollection.find({}).length;\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n\n            // Introduce a delay to ensure the UI has fully rendered the list before proceeding\n            setTimeout(async () => {\n               cb?.();\n               resolve();\n            }, 50);\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor),\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId),\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`,\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`,\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         },\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`,\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1,\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length,\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0,\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\",\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\",\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\",\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData, skipDatasourceFilter = false) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource && !skipDatasourceFilter)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions,\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row),\n                  ),\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row),\n                  ),\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules,\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    * @param {string} eventName - Name of the event\n    * @param {object} emitter - Emitter object\n    */\n   eventRemove(eventName, emitter = null) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName && (!emitter || emitter == e.emitter))\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID,\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessDefinition() {\n      return this.objectByID(\"af91fc75-fb73-4d71-af14-e22832eb5915\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // SENTRY Error AB-APPBUILDER-4H\n            // \"curr.rules.forEach is not a function\"\n            // curr.rules is supposed to be an array. If we are not\n            // getting that, then let's send an alert to figure out what\n            // is happening here:\n            if (!Array.isArray(curr.rules)) {\n               // what is this entry?\n               let err = new Error(\n                  `ABObjectCore.whereCleanUP(): Sentry Error: AB-APPBUILDER-4H: current rule is not properly formed: ${JSON.stringify(\n                     curr\n                  )}`\n               );\n               this.AB.notify.developer(err, { curr });\n            }\n\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewOrgChart\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   const extractVal = (itemData) => {\n      let val;\n      const relationName = field.relationName();\n      if (itemData[relationName]) {\n         val =\n            (field.indexField\n               ? itemData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? itemData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            itemData[relationName].id ??\n            itemData[relationName];\n      } else {\n         let fieldVal = getFieldVal(itemData, field);\n         if (fieldVal != null) {\n            val = fieldVal;\n         }\n      }\n      return val;\n   };\n\n   if (Array.isArray(rowData)) {\n      connectedVal = rowData.map((data) => extractVal(data));\n   } else if (rowData) {\n      connectedVal = extractVal(rowData);\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value || !value?.length) return false;\n      let result = false;\n\n      if (!Array.isArray(value)) value = [value];\n\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"is_not_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) != this.Account.username)\n                  .length > 0;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         if (condKey == \"is_current_date\") {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"none\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         } else {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"datepicker\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         }\n      }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n/*function L(key, altText) {\n   // TODO:git \n   // return altText; // AD.lang.label.getLabel(key) || altText;\n}*/\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      var L = this.AB.Label();\n\n      const currentDate = new Date();\n      currentDate.setHours(0, 0, 0, 0);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"lessCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() < currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n                  case \"lessEqualCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() <= currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewOrgChartPropertyComponentDefaults = {\n   datacollectionID: \"\",\n   fields: \"\",\n   direction: \"t2b\",\n   depth: 99,\n   color: \"#00BCD4\",\n   // visibleLevel: 2,\n   pan: 1,\n   zoom: 1,\n   height: 0,\n   export: 0,\n   exportFilename: \"\",\n};\n\nconst ABViewOrgChartDefaults = {\n   key: \"orgchart\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"OrgChart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewOrgChartCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewOrgChartDefaults\n      );\n   }\n\n   static common() {\n      return ABViewOrgChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewOrgChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.datacollectionID =\n         this.settings.datacollectionID ??\n         ABViewOrgChartPropertyComponentDefaults.datacollectionID;\n\n      this.settings.fields =\n         this.settings.fields ?? ABViewOrgChartPropertyComponentDefaults.fields;\n\n      this.settings.direction =\n         this.settings.direction ??\n         ABViewOrgChartPropertyComponentDefaults.direction;\n\n      this.settings.depth = parseInt(\n         this.settings.depth ?? ABViewOrgChartPropertyComponentDefaults.depth\n      );\n\n      this.settings.color =\n         this.settings.color ?? ABViewOrgChartPropertyComponentDefaults.color;\n\n      this.settings.pan = JSON.parse(\n         this.settings.pan ?? ABViewOrgChartPropertyComponentDefaults.pan\n      );\n\n      this.settings.zoom = JSON.parse(\n         this.settings.zoom ?? ABViewOrgChartPropertyComponentDefaults.zoom\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewOrgChartPropertyComponentDefaults.height\n      );\n\n      this.settings.export = JSON.parse(\n         this.settings.export ?? ABViewOrgChartPropertyComponentDefaults.export\n      );\n\n      this.settings.exportFilename =\n         this.settings.exportFilename ??\n         ABViewOrgChartPropertyComponentDefaults.exportFilename;\n   }\n\n   get datacollection() {\n      const datacollectionID = (this.settings || {}).datacollectionID;\n\n      return this.AB.datacollectionByID(datacollectionID);\n   }\n\n   getValueFields(object) {\n      // OrgChart supports only one parent node.\n      return (\n         object?.connectFields(\n            (f) => f.linkType() == \"many\" && f.linkViaType() == \"one\"\n         ) ?? []\n      );\n   }\n\n   /**\n    * @function valueFields()\n    * Return IDs of connect field for each layer of OrgChart, starting from the top to the bottom.\n    * \n    * @return {Array}\n    * \n    */\n   valueFields() {\n      let fieldValues = (this.settings?.fields ?? \"\").split(\",\");\n      if (!Array.isArray(fieldValues)) fieldValues = [fieldValues];\n\n      const result = [];\n\n      let obj = this.datacollection?.datasource;\n      fieldValues.forEach((fId) => {\n         if (!fId) return;\n\n         const field = obj?.fieldByID?.(fId);\n         if (!field) return;\n\n         result.push(field);\n         obj = field.datasourceLink;\n      });\n\n      return result;\n   }\n\n   // descriptionField() {\n   //    return this.valueField()?.datasourceLink?.fieldByID?.(\n   //       this.settings.columnDescription\n   //    );\n   // }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // scan the rules and convert any is_current_date rules to UTC daytime range.\n      let rules = cond.where?.rules;\n      while (rules?.length) {\n         let nestedRules = [];\n         rules.forEach((rule) => {\n            if (rule.rule === \"is_current_date\")\n               rule.value = this.AB.rules.getUTCDayTimeRange();\n            else if (rule.rules?.length)\n               nestedRules = nestedRules.concat(rule.rules);\n         });\n\n         rules = nestedRules;\n      }\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(/,|:/) ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         cond.value = AB.rules.getUTCDayTimeRange();\n      } else if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.value =\n            cond.includes?.length == 2 ? cond.includes.join(\":\") : null;\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (field && (field.key === \"date\" || field.key === \"datetime\"))\n                  return field.exportValue(new Date(v));\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nfunction _uiQueryOptionId(fieldId) {\n   return `byQueryField-query-option-${fieldId}`;\n}\n\nfunction _uiFieldOptionId(fieldId) {\n   return `byQueryField-field-option-${fieldId}`;\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      const _this = this;\n      const $filterView = $el.$app.require(\"jet-views\", \"filter\");\n\n      if (!this._fnBaseGetValue)\n         this._fnBaseGetValue = $filterView.prototype.GetValue;\n      $filterView.prototype.GetValue = function () {\n         const rule = _this._fnBaseGetValue.call(this);\n\n         if (\n            rule.condition.type == \"in_query_field\" ||\n            rule.condition.type == \"not_in_query_field\"\n         ) {\n            const queryOptId = _uiQueryOptionId(rule.field);\n            const fieldOptId = _uiFieldOptionId(rule.field);\n            const selectedQueryId = $$(queryOptId)?.getValue();\n            const selectedFieldId = $$(fieldOptId)?.getValue();\n\n            if (selectedQueryId && selectedFieldId) {\n               rule.includes = [selectedQueryId, selectedFieldId];\n            }\n         }\n\n         return rule;\n      };\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $filterView.prototype.CreateFilter = async function (\n         fieldId,\n         type,\n         format,\n         conditions,\n         place\n      ) {\n         let inputs = _this.uiValue(fieldId);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: fieldId,\n            mode: type,\n            template: function (o) {\n               let str = o[fieldId];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // NOTE: Need this to have filter.config.value?.includes value\n         // let data = [];\n         if ($el) {\n            await $el.$app.getService(\"backend\").data(fieldId);\n            // data = await $query.getService(\"backend\").data(fieldId);\n         }\n         // filter.parse(data);\n\n         // Populate options of \"in_query_field\" and \"not_in_query_field\"\n         if (\n            conditions.filter(\n               (cond) =>\n                  cond.id == \"in_query_field\" || cond.id == \"not_in_query_field\"\n            ).length &&\n            filter.config.value?.includes?.length == 2\n         ) {\n            // inputs = _this.uiValue(fieldId, filter.config.value.includes);\n            // filter.define(\"inputs\", inputs);\n            const queryOptId = _uiQueryOptionId(fieldId);\n            const fieldOptId = _uiFieldOptionId(fieldId);\n            const $queryOpt = $$(queryOptId);\n            const $fieldOpt = $$(fieldOptId);\n            const vals = filter.config.value?.includes ?? [];\n            if (vals?.length > 1 && $queryOpt && $fieldOpt) {\n               $queryOpt.setValue(vals[0]);\n               $fieldOpt.setValue(vals[1]);\n               $queryOpt.refresh();\n               $fieldOpt.refresh();\n            }\n         }\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName, defaultValue = null) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field, defaultValue))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field, defaultValue) {\n      // ABQuery Options\n      const qOpts = this.queries(\n         (q) => this._Object == null || q.id != this._Object.id\n      ).map((q) => {\n         return {\n            id: q.id,\n            value: q.label,\n         };\n      });\n\n      const pullFieldOption = (queryId) => {\n         const options = [];\n\n         // Get fields of the query\n         const Query = this.AB.queryByID(queryId);\n         if (Query) {\n            Query.fields((f) => !f.isConnection).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: `${q.object.label}.${q.label}`,\n               });\n            });\n         }\n\n         return options;\n      };\n\n      const refreshFieldOption = ($queryOpt, queryId) => {\n         const options = pullFieldOption(queryId);\n\n         // Update UI\n         if ($queryOpt) {\n            const $queryContainer = $queryOpt.getParentView();\n            const $fieldOption = $queryContainer.getChildViews()[1];\n            $fieldOption?.define(\"options\", options);\n            $fieldOption?.refresh();\n         }\n      };\n\n      let queryId;\n      let fieldId;\n      let fieldOptions = [];\n      if (defaultValue?.length == 2) {\n         queryId = defaultValue[0];\n         fieldId = defaultValue[1];\n\n         fieldOptions = pullFieldOption(queryId);\n      }\n\n      return [\n         {\n            batch: \"queryField\",\n            view: \"form\",\n            borderless: true,\n            padding: 0,\n            elements: [\n               {\n                  id: _uiQueryOptionId(field?.id),\n                  name: \"query\",\n                  view: \"combo\",\n                  placeholder:\n                     this.labels.component.inQueryFieldQueryPlaceholder,\n                  options: qOpts,\n                  value: queryId,\n                  on: {\n                     onChange: function (qVal) {\n                        refreshFieldOption(this, qVal);\n                     },\n                  },\n               },\n               {\n                  id: _uiFieldOptionId(field?.id),\n                  name: \"field\",\n                  view: \"combo\",\n                  placeholder: L(\"Choose a Field\"),\n                  options: fieldOptions,\n                  value: fieldId,\n               },\n            ],\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then(async (data) => {\n            await this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   async populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      await this._sortByRecent(data);\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n\n   get _recentStorageId() {\n      return `${this.id}_recent_selected`;\n   }\n\n   /**\n    * @method saveSelect\n    * This function stores the user's selected option in local storage.\n    * It ensures that the user's recent selection is saved, allowing the system\n    * to retrieve it and provide a more personalized experience during future visits.\n    * @param {Array} selectedItems\n    * @return {Promise}\n    */\n   async saveSelect(selectedItems) {\n      if (!selectedItems) return;\n\n      if (!Array.isArray(selectedItems)) selectedItems = [selectedItems];\n\n      let recentSelected =\n         (await this.AB.Storage.get(this._recentStorageId)) ?? [];\n\n      selectedItems.forEach((item) => {\n         if (item == null) return;\n\n         const itemId = item.uuid ?? item.id ?? item;\n         recentSelected = recentSelected.filter((id) => id != itemId);\n         recentSelected.unshift(itemId);\n      });\n\n      return this.AB.Storage.set(this._recentStorageId, recentSelected);\n   }\n\n   /**\n    * @method _sortByRecent\n    * This function sorts the options based on the user's most recently selected item, which is retrieved from local storage.\n    *\n    * @param {Array} options\n    */\n   async _sortByRecent(options) {\n      if (!options?.length) return options;\n\n      const recentSelected = await this.AB.Storage.get(this._recentStorageId);\n      if (!recentSelected?.length) return options;\n\n      if (!Array.isArray(options)) options = [options];\n\n      options.sort((a, b) => {\n         const aId = a.uuid ?? a.id ?? a;\n         const bId = b.uuid ?? b.id ?? b;\n\n         return recentSelected.indexOf(bId) - recentSelected.indexOf(aId);\n      });\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: function () {\n                           Filter.popUp(this.$view, null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable?.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n         const CurrentObject = this.datacollection.datasource;\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         //maxlength field\n         const f = CurrentObject.fieldByID(editor.config.fieldID);\n         if (\n            f.settings.maxLength &&\n            state.value.length > f.settings.maxLength\n         ) {\n            this.AB.alert({\n               title: this.label(\"Limit max length\"),\n               text: this.label(\n                  \"You can enter a maximum of \" +\n                     f.settings.maxLength +\n                     \" characters\"\n               ),\n            });\n            $DataTable.addCellCss(item.id, editor.column, \"webix_invalid_cell\");\n            $DataTable.refresh(editor.row);\n            $DataTable.clearSelection();\n            return false;\n         }\n\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: f.filter.getValue(),\n               values: $DataTable.getSelectedItem[f.columnName],\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                     data[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  // const ruleValid = filter.filters(newData);\n                  const filterComplex = ab.filterComplexNew(\n                     `rule-validate-${key}`\n                  );\n                  filterComplex.fieldsLoad(\n                     CurrentObject.fields(),\n                     CurrentObject\n                  );\n                  const ruleValid = filterComplex.isValid(data, filter.filters);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewOrgChartCore = require(\"../../core/views/ABViewOrgChartCore\");\nconst ABViewOrgChartComponent = require(\"./viewComponent/ABViewOrgChartComponent\");\n\nmodule.exports = class ABViewOrgChart extends ABViewOrgChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewOrgChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      // this.refreshData();\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount != 1 ? this.settings.xCount : 0,\n            height: this.settings.height,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         if (Array.isArray(data) == false) {\n            data = [data];\n         }\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         // store the user's selected option in local storage.\n         field.saveSelect(selectedValues);\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewOrgChartComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewOrgChart_${baseView.id}`,\n         Object.assign(\n            {\n               chartView: \"\",\n               chartDom: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"template\",\n            template: `<div id=\"${ids.chartDom}\"></div>`,\n            css: {\n               position: \"relative\",\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $chartView = $$(this.ids.chartView);\n      if ($chartView)\n         this.AB.Webix.extend($chartView, this.AB.Webix.ProgressBar);\n   }\n\n   async loadOrgChartJs() {\n      this.busy();\n\n      const [orgChartLoader] = await Promise.all([\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../js/orgchart-webcomponents.js\"\n         ),\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../styles/orgchart-webcomponents.css\"\n         ),\n      ]);\n\n      this.OrgChart = orgChartLoader.default;\n\n      this.ready();\n   }\n\n   async onShow() {\n      super.onShow();\n\n      this.busy();\n      await this.loadOrgChartJs();\n      await this.pullData();\n      this.displayOrgChart();\n      this.ready();\n   }\n\n   async displayOrgChart() {\n      const baseView = this.view;\n      const chartData = this.AB.cloneDeep(this.chartData);\n\n      const orgchart = new this.OrgChart({\n         data: chartData,\n         direction: baseView.settings.direction,\n         // depth: baseView.settings.depth,\n         pan: baseView.settings.pan,\n         zoom: baseView.settings.zoom,\n         // visibleLevel: baseView.settings.visibleLevel,\n\n         exportButton: baseView.settings.export,\n         exportFilename: baseView.settings.exportFilename,\n\n         // ajaxURLs: {\n         //    children: function (nodeData) {\n         //       console.info(\"nodeData: \", nodeData);\n         //       return null;\n         //    },\n         // },\n         nodeContent: \"description\",\n      });\n\n      const chartDom = document.querySelector(`#${this.ids.chartDom}`);\n      if (chartDom) {\n         chartDom.textContent = \"\";\n         chartDom.innerHTML = \"\";\n         chartDom.appendChild(orgchart);\n      }\n\n      setTimeout(() => {\n         this._setColor();\n      }, 1);\n   }\n\n   async pullData() {\n      const view = this.view;\n      const dc = view.datacollection;\n      const cursor = dc?.getCursor();\n      if (!cursor) return null;\n\n      const valueFields = view.valueFields();\n      // const descriptionField = view.descriptionField?.();\n\n      const chartData = this.chartData;\n      chartData.name = dc?.datasource?.displayData(cursor) ?? \"\";\n      chartData.description = \"\";\n      // description:\n      //    descriptionField?.format?.(f) ??\n      //    f[descriptionField?.columnName] ??\n      //    \"\",\n      chartData._rawData = cursor;\n\n      let parentChartData = [chartData];\n      let currChildren;\n\n      valueFields.forEach((field) => {\n         let _tempParentChartData = [];\n\n         parentChartData.forEach(async (chartItem) => {\n            if (!chartItem) return;\n\n            const rawData = chartItem?._rawData;\n            currChildren = rawData?.[field?.relationName()];\n\n            // Pull data from the server\n            if (!currChildren) {\n               const objLink = field.object;\n               const where = {\n                  glue: \"and\",\n                  rules: [],\n               };\n               where.rules.push({\n                  key: objLink.PK(),\n                  rule: \"equals\",\n                  value: rawData[objLink.PK()],\n               });\n               const returnData = await objLink\n                  .model()\n                  .findAll({ where, populate: true });\n               chartItem._rawData = returnData?.data[0];\n               currChildren = chartItem._rawData?.[field?.relationName()];\n\n               this.displayOrgChart();\n            }\n\n            chartItem.children = [];\n            if (currChildren?.length) {\n               currChildren.forEach((childData) => {\n                  chartItem.children.push({\n                     name: field.datasourceLink.displayData(childData),\n                     description: \"\",\n                     _rawData: childData,\n                  });\n               });\n            }\n\n            _tempParentChartData = _tempParentChartData.concat(\n               chartItem.children\n            );\n         });\n\n         parentChartData = _tempParentChartData;\n      });\n   }\n\n   get chartData() {\n      if (this._chartData == null) {\n         this._chartData = {};\n      }\n      return this._chartData;\n   }\n\n   _setColor() {\n      const view = this.view;\n      let doms = document.querySelectorAll(`org-chart`);\n      doms.forEach((dom) => {\n         dom.style.backgroundImage = \"none\";\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart .verticalNodes>td::before,\n         org-chart .verticalNodes ul>li::before,\n         org-chart .verticalNodes ul>li::after,\n         org-chart .node .content,\n         org-chart tr.lines .topLine,\n         org-chart tr.lines .rightLine,\n         org-chart tr.lines .leftLine`);\n      doms.forEach((dom) => {\n         dom.style.borderColor = view.settings.color;\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart tr.lines .downLine,\n         org-chart .node .title`);\n      doms.forEach((dom) => {\n         dom.style.backgroundColor = view.settings.color;\n      });\n   }\n\n   busy() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.disable?.();\n      $chartView?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.enable?.();\n      $chartView?.hideProgress?.();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // set quality of the saving image\n      const WIDTH_OF_SAVE_IMAGE = 1200;\n\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = WIDTH_OF_SAVE_IMAGE;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","isLabelUpdateEnabled","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","enableLabelUpdates","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","getUTCDayTimeRange","now","year","getFullYear","month","getMonth","getDate","startOfDay","endOfDay","startOfDayUTC","getTime","getTimezoneOffset","endOfDayUTC","formatDate","isoString","toISOString","concat","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","skipDatasourceFilter","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessDefinition","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","extractVal","itemData","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","MONTH","DAY","DATE","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","currentDate","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewOrgChartPropertyComponentDefaults","direction","depth","color","pan","zoom","export","exportFilename","ABViewOrgChartDefaults","getValueFields","valueFields","fieldValues","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","agenda","timelineSectionList","unitList","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","nestedRules","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_uiQueryOptionId","_uiFieldOptionId","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$filterView","$app","require","_fnBaseGetValue","GetValue","queryOptId","fieldOptId","selectedQueryId","selectedFieldId","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","getService","$queryOpt","$fieldOpt","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","qOpts","pullFieldOption","Query","fieldOptions","qVal","$fieldOption","getChildViews","refreshFieldOption","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","_sortByRecent","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","_recentStorageId","saveSelect","selectedItems","recentSelected","aId","bId","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","A","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","showFilterPopup","showPopup","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","maxLength","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewOrgChartCore","ABViewOrgChartComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","getFilterHelper","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","chartView","chartDom","$chartView","loadOrgChartJs","orgChartLoader","OrgChart","pullData","displayOrgChart","chartData","orgchart","exportButton","nodeContent","_setColor","_rawData","currChildren","parentChartData","_tempParentChartData","chartItem","rawData","objLink","childData","_chartData","doms","borderColor","backgroundColor","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}