{"version":3,"file":"635.47138f06f7f82fb93e7c.js","mappings":"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X,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC1uBN,MAAMC,EACH7d,YAAYmC,GACT9B,KAAK8B,GAAKA,EACV9B,KAAKyd,OAAS,EACjB,CAEAC,SAASxW,EAAM+J,GACZjR,KAAKyd,OAAOpZ,KAAK,CAAE6C,KAAMA,EAAM+J,QAASA,GAC3C,CAEA0M,OACG,OAA6B,GAAtB3d,KAAKyd,OAAOvX,MACtB,CAEAqB,OACG,OAAOvH,KAAKyd,OAAOvX,OAAS,CAC/B,CAEA0X,qBACG,IAAIpG,EAAM,CACPrI,MAAO,eACP0O,kBAAmB,CAAC,GAGnBC,EAAOtG,EAAIqG,kBAOf,OALA7d,KAAKyd,OAAOzZ,SAAS/E,IAClB6e,EAAK7e,EAAEiI,MAAQ4W,EAAK7e,EAAEiI,OAAS,GAC/B4W,EAAK7e,EAAEiI,MAAM7C,KAAKpF,EAAE,IAGhBuY,CACV,CAEAhQ,WAAWwC,GACR,IAAI+T,EAAO/d,KAAK4d,qBAChB5d,KAAK8B,GAAGkc,WAAWC,sBAAsBF,EAAM/T,EAClD,CAEAkU,WAAWC,EAAOC,GACf,IAAIL,EAAO/d,KAAK4d,qBAChB5d,KAAK8B,GAAGkc,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrB3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nsE,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACX+mG,EAAKjnG,KAAK8B,GACVwhF,EAAOtjF,KACPknG,EAAUlnG,KAAK8B,GAAG8Y,MAClBzU,EAAWnG,KAAKmG,SAChB4mB,EAAK/sB,KAAK+rB,eACV8Q,EAAY9P,GAAIjB,WAAWle,UAC9BzH,EAASokE,eAAerjE,OACxBL,WACGupI,EAAarjH,GAAIjB,WAAWle,UAC/BzH,EAASokE,eAAe33C,QACxB/rB,WACGwpI,EAAWtjH,GAAIjB,WAAWle,UAC7BzH,EAASokE,eAAe5hB,MACxB9hD,WACGypI,EAAcvjH,GAAIjB,WAAWle,UAChCzH,EAASokE,eAAeS,SACxBnkE,WACGooD,EAAcliC,GAAIjB,WAAWle,UAChCzH,EAASokE,eAAeU,SACxBpkE,WACG0pI,EAAgBxjH,GAAIjB,WAAWle,UAClCzH,EAASokE,eAAeW,WACxBrkE,WACG2pI,EAAkBzjH,GAAIjB,WAAWle,UACpCzH,EAASokE,eAAeY,QACxBtkE,WACG4pI,EAAa1jH,GAAIjB,WAAWle,UAC/BzH,EAASokE,eAAee,QACxBzkE,WACG6pI,EAAgB3jH,GAAIjB,WAAWle,UAClCzH,EAASokE,eAAegB,WACxB1kE,WACG8pI,EAAiB5jH,GAAIjB,WAAWle,UACnCzH,EAASokE,eAAea,YACxBvkE,WACG+pI,EAAc7jH,GAAIjB,WAAWle,UAChCzH,EAASokE,eAAec,SACxBxkE,WACGgqI,EAAa5pC,EAAG/6E,mBACnBlsB,KAAKmG,SAASqlE,oBAEXslE,EAAaD,GAAY/kH,WAAWle,UACvCzH,EAASslE,uBAAuB16D,QAChClK,WACGkqI,EAAqBF,GAAY/kH,WAAWle,UAC/CzH,EAASslE,uBAAuBN,QAChCtkE,WACGmqI,EAAcH,GAAY/kH,WAAWle,UACxCzH,EAASslE,uBAAuB1tC,SAChCl3B,WACGoqI,EAAkB,GAExB5xI,OAAOD,KAAK+G,EAASulE,UAAU1nE,SAASI,IACN,IAA3B+B,EAASulE,SAAStnE,IAEtB6sI,EAAgB5sI,KAAK,CAClBxF,GAAI,GAAGu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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\nimport * as Sentry from \"@sentry/browser\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        console.log(`${jobID} : ${ev}:normalization begin`);\n                        let timeFrom = performance.now();\n                        model.normalizeData(data.data);\n                        let timeTo = performance.now();\n                        console.log(\n                           `${jobID} : ${ev}:normalization end:  ${\n                              timeTo - timeFrom\n                           }ms`\n                        );\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   // Wrap the call with senrty span for perfromance tracking\n   async salSend(params) {\n      const shortRoute =\n         params.url.match(/https?:\\/\\/[^/]+(\\/.+)/)?.[1] ?? params.url;\n      return Sentry.startSpan(\n         { name: shortRoute, op: \"websocket.client\" },\n         async () => await this._salSend(params)\n      );\n   }\n\n   _salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as Sentry from \"@sentry/browser\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      // const scope = new Sentry.Scope();\n      // // Mark builder alerts as lower level in sentry\n      // if (domain == \"builder\") scope.setLevel(\"warning\");\n      // scope.setTag(\"domain\", domain);\n      // scope.setContext(\"info\", info);\n      // Sentry.captureException(error, scope);\n      // console.error(error);\n      // console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               // if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               // }\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      // PREVENT: repeatly refresh data too often\n      if (this._getOptionsToggle) clearTimeout(this._getOptionsToggle);\n      await new Promise((resolve) => {\n         this._getOptionsToggle = setTimeout(resolve, 100);\n      });\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img src=\"${\n               row.src\n            }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n   }\n\n   onShow() {\n      super.onShow();\n\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth();\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth() {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.dbTableName()}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ABComponent","ABFieldManager","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","timeFrom","performance","now","normalizeData","timeTo","isConnected","shortRoute","match","op","_salSend","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","eventRemove","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","followCursor","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","opt","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsToggle","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}